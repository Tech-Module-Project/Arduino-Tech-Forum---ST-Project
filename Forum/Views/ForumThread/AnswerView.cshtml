@using Forum.Models.Answers
@model IEnumerable<Forum.Models.Answers.IAnswer>


@foreach (var answer in Model)
{
    <div class="answer">
        <div>
            @{
                var answerTypeName = answer.GetType()
                    .Name;

                if (answerTypeName == "RegisteredUserAnswer")
                {
                    var registeredUserAnswer = (RegisteredUserAnswer) answer;
                    var authorImageSrc = registeredUserAnswer.Author.GetProfileImageSrc();
                    @registeredUserAnswer.Author.UserName
                    <div>@Html.ActionLink("Delete Answer", "Delete", new  {id = registeredUserAnswer.Id})</div>
                    <img src="@authorImageSrc"/>

                }
                else if (answerTypeName == "AnonymousUserAnswer")
                {
                    var anonymousUserAnswer = (AnonymousUserAnswer) answer;
                    @anonymousUserAnswer.Email
                    <div>@Html.ActionLink("Delete Answer", "Delete", new { id = anonymousUserAnswer.Id })</div>
                }
                <br>
                @:Created On: @answer.CreationDate
                <div>
                    @{
                        var points = answer.PositivePoints - answer.NegativePoints;
                    }

                    Points: <span class="answer-points">@points</span>
                </div>


                <a class="upvote-answer">UpVote</a>
                <a class="downvote-answer">DownVote</a>

                <p>
                    <div class="answerBody">
                        @answer.Body
                    </div>
                </p>

            }

            <input type="hidden" name="answerId" id="answerId" value="@answer.Id" />
            <input type="hidden" name="answerType" id="answerType" value="@answer.GetType().Name"/>

            @using (Html.BeginForm("ReplyToAnswer", "Answer", FormMethod.Post, new
            {
                id = "replyToAnswerForm"
            }))
            {
                @Html.AntiForgeryToken()

                <input type="hidden" name="forumThreadId" id="forumThreadId" value="@answer.ForumThread.Id"/>
                <input type="hidden" name="parentAnswerId" id="parentAnswerId" value="@answer.Id"/>
                <input type="hidden" name="parentAnswerType" id="parentAnswerType" value="@answer.GetType().Name"/>
                <input type="hidden" name="previousPageUrl" id="previousPageUrl" value="/ForumThread/Details/@answer.ForumThread.Id"/>


                if (!User.Identity.IsAuthenticated)
                {
                    <input placeholder="email4ence ;)" type="email" name="email" id="email" value=""/>
                }

                @Html.TextBox("replyBody")

                <input type="submit" value="Reply"/>
            }

        </div>
        <div class="answerResponses">
            @{
                if (answer.Replies != null && answer.Replies.Count > 0)
                {
                    Html.RenderPartial("AnswerView", answer.Replies);
                }
            }
        </div>
    </div>
}
