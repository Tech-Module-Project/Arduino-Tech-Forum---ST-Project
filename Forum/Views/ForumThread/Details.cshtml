@model Forum.Models.ForumThreadDetailsModelView

<div class="row">
    <div class="col-md-6 col-md-offset-3">
        <h4>@Html.DisplayFor(model => model.Thread.Title)</h4>
        <hr />
        <div class="row">
            @Html.DisplayFor(model => model.Thread.Body)
        </div>
        <div class="row">
            @Html.DisplayNameFor(model => model.Thread.CreationDate)
            @Html.DisplayFor(model => model.Thread.CreationDate)
        </div>
    </div>
</div>

<div class="row">
    @using (Html.BeginForm("ReplyToThread", "ForumThread", FormMethod.Post, new
    {
        id = "userReplyForm"
    }))
    {
        @Html.AntiForgeryToken()

        <input type="hidden" name="forumThreadId" id="forumThreadId" value="@Model.Thread.Id" />
        <input type="hidden" name="previousPageUrl" id="previousPageUrl" value="/ForumThread/Details/@Model.Thread.Id" />

        if (!User.Identity.IsAuthenticated)
        {
            <input type="email" name="email" id="email" value="" />
        }

        @Html.TextBox("replyBody")

        <input type="submit" value="Reply" />
    }
</div>

<div class="row">
    <h4 style="text-align: center">Answers</h4>
</div>

<hr />

@{
    if (Model.Answers != null && Model.Answers.Count > 0)
    {
        Html.RenderPartial("AnswerView", Model.Answers);
    }
}

<script type="text/javascript">
    $('.upvote-answer').click(function() {
        var answer = $(this).parent();
        updateAnswerPoints(answer, "upvote");
    });

    $('.downvote-answer').click(function() {
        var answer = $(this).parent();
        updateAnswerPoints(answer, "downvote");
    });

    function updateAnswerPoints(answer, voteType) {
        var url;

        if (voteType.toLowerCase() === 'upvote') {
            url = '/Answer/UpVoteAnswer';
        } else if (voteType.toLowerCase() === 'downvote') {
            url = '/Answer/DownVoteAnswer';
        } else {
            throw new window.Exception('Invalid vote type');
        }

        var answerId = answer.find('#answerId').val(),
            answerType = answer.find('#answerType').val();

        $.ajax({
            url: url,
            type: 'GET',
            dataType: 'json',
            cache: false,
            data: {
                answerId: answerId,
                answerType: answerType
            },
            success: function (points) {
                answer.find('.answer-points').text(points.points);
            }
        });
    }

</script>
